name: 'SharePoint Release'

on: [workflow_dispatch]

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
    - name: Cloning repo # This step is required
      uses: actions/checkout@v3

    - name: Get SharePoint Access Token
      id: get_token
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        TENANT_ID: ${{ secrets.TENANT_ID }}
        SITENAME: Trumio-env
        FILENAME: env-uat
      run: |
          response=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "client_id=${{ env.CLIENT_ID }}&client_secret=${{ env.CLIENT_SECRET }}&grant_type=client_credentials&resource=https://graph.microsoft.com" "https://login.microsoftonline.com/${{ env.TENANT_ID }}/oauth2/token")
          echo "token=$(echo $response | jq -r '.access_token')" >> $GITHUB_ENV
      
    - name: Retrieve Site ID
      id: get_site_id
      run: |
          site_response=$(curl -H "Authorization: Bearer ${{ env.token }}" \
          "https://graph.microsoft.com/v1.0/sites?search=${{ env.SITENAME }}")
          echo "site_id=$(echo $site_response | jq -r '.value[0].id')" >> $GITHUB_ENV

    - name: Display Site ID
      run: |
          echo "Site ID:"
          echo "${{ env.site_id }}"

    - name: Fetch Download URL from SharePoint
      id: get_download_url
      run: |
          file_response=$(curl -H "Authorization: Bearer ${{ env.token }}" \
          "https://graph.microsoft.com/v1.0/sites/${{ env.site_id }}/drive/root:/${{ env.FILENAME }}")
          echo "File response: $file_response"
          download_url=$(echo $file_response | jq -r '."@microsoft.graph.downloadUrl"')
          echo "Download URL: $download_url"
          echo "download_url=$download_url" >> $GITHUB_ENV

    - name: Display Download URL
      run: |
          echo "Download URL:"
          echo "${{ env.download_url }}"

    - name: Download File from SharePoint
      run: |
          if [ -z "${{ env.download_url }}" ]; then
            echo "Error: Download URL is empty"
            exit 1
          fi
          curl -L "${{ env.download_url }}" --output fetched_file
          echo "File downloaded successfully."

    - name: Upload Fetched File as Artifact
      uses: actions/upload-artifact@v3
      with:
          name: fetched_file
          path: fetched_file
