name: Tag Dispatch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to push the tag'
        required: true
        type: choice
        options:
          - main
          - feature

  # push:
  #   # branches:
  #   #   - dev-test
  #       tags:
  #         - 'uat_v*'

jobs:
  tag-dispatch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up Git
      run: |
        git config user.name "vjraghav55"
        git config user.email "vjraghav55@gmail.com"

    - name: 'Get tag'
      id: tag
      uses: 'WyriHaximus/github-action-get-previous-tag@8a0e045f02c0a3a04e1452df58b90fc7e555e950'

    - name: Increment tag
      run: |
        # Extract the tag from the output
        previous_tag="${{ steps.tag.outputs.tag }}"
        
        # Increment the tag version (assuming it follows uat_vX.Y.Z format)
        next_tag=$(echo "$previous_tag" | awk -F '.' '{$NF = $NF + 1;} 1' OFS='.')
        
        echo "Next tag: $next_tag"
        echo "$next_tag"
        
    #     # Use the incremented tag
    #     git tag "$next_tag"
    #     git push origin "$next_tag"

    # - name: Set correct environment
    #   run: |
    #     TAG=${{ steps.tag.outputs.tag }}
    #     echo "TAG=$TAG" >> "$GITHUB_ENV"
    #     echo $GITHUB_ENV

    # - name: Get latest tag
    #   id: get-latest-tag
    #   run: |
    #     latest_tag=$(git tag --list 'uat_v*' | sort -V | tail -n 1 || true)
    #     if [ -z "$latest_tag" ]; then
    #       echo "No existing tags found with prefix 'uat_v'. Setting initial version."
    #       latest_tag="uat_v1.0.0"
    #     fi
    #     echo "Latest tag: $latest_tag"
    #     echo "::set-output name=tag::$latest_tag"

    # - name: Calculate next tag
    #   id: calculate-next-tag
    #   run: |
    #     # Extract current version
    #     IFS='_' read -r _ version <<< "$latest_tag"
    #     IFS='.' read -r major minor patch <<< "${version#v}"

    #     # Increment patch version
    #     patch=$((patch + 1))

    #     # Create next tag
    #     next_tag="uat_v$major.$minor.$patch"

    #     echo "Next tag: $next_tag"
    #     echo "::set-output name=tag::$next_tag"

    # - name: Display tags
    #   run: |
    #     echo "Latest tag: ${{ steps.get-latest-tag.outputs.tag }}"
    #     echo "Next tag: ${{ steps.calculate-next-tag.outputs.tag }}"

    # - name: Create and push tag
    #   run: |
    #     next_tag=${{ steps.calculate-next-tag.outputs.tag }}
    #     git tag $next_tag
    #     echo "Created tag: $next_tag"
    #     # git push origin $next_tag --force
